// <auto-generated />
using System;
using LSStudentEmployeeAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LSStudentEmployeeAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211119001005_initials")]
    partial class initials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LSStudentEmployeeAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GraduateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LSStudentEmployeeAPI.Models.FTEReview", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Communication")
                        .HasColumnType("float");

                    b.Property<string>("ConstructiveFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluatingFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluatingPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Initiative")
                        .HasColumnType("float");

                    b.Property<double>("JobKnowledge")
                        .HasColumnType("float");

                    b.Property<string>("PositiveFeedBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("QualityOfWork")
                        .HasColumnType("float");

                    b.Property<double>("Reliability")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("FTEReviews");
                });

            modelBuilder.Entity("LSStudentEmployeeAPI.Models.SelfEval", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Communication")
                        .HasColumnType("float");

                    b.Property<string>("EvaluatingPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Initiative")
                        .HasColumnType("float");

                    b.Property<double>("JobKnowledge")
                        .HasColumnType("float");

                    b.Property<double>("QualityOfWork")
                        .HasColumnType("float");

                    b.Property<double>("Reliability")
                        .HasColumnType("float");

                    b.Property<bool?>("giveFeedback")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SelfEvals");
                });
#pragma warning restore 612, 618
        }
    }
}
